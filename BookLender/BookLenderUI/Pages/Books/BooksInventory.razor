@page "/books"
@using BookLender.Shared.Models;
@using BookLenderUI.Services.Interfaces
@inject IBookService BookService


<div class="d-flex align-items-center gap-4">
    <h3 class="fw-bold">Book Inventory</h3>

    <a href="books/add" class="btn btn-outline-warning fw-bold border-2">Add Book</a>

    <nav class="navbar navbar-light bg-light" style="margin-left: 550px">
        <form class="form-inline d-flex" @onsubmit="SearchBook">
            <input class="form-control mr-sm-2" type="search" placeholder="Search title" aria-label="Search" @bind="_searchedTitle">
            <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
        </form>
    </nav>
</div>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Title</th>
                        <th scope="col">Author</th>
                        <th scope="col">Publisher</th>
                        <th scope="col">Publication Year</th>
                        <th scope="col">Renting</th>
                        <th scope="col">Details</th>
                    </tr>
                </thead>
                <tbody>
                    @if (_books == null)
                    {
                        <tr>
                            <td colspan="7" class="text-center">Loading...</td>
                        </tr>
                    }
                    else if (!_books.Any())
                    {
                        <tr>
                            <td colspan="7" class="text-center">No books found.</td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var book in _books)
                        {
                            <tr class="align-middle">
                                <td><span class="badge bg-secondary">@book.InventoryNumber</span></td>
                                <td>@book.Title</td>
                                <td>@book.Author</td>
                                <td>@book.Publisher</td>
                                <td>@book.PublicationYear</td>
                                <td><a href="/loans/create-loan/@book.InventoryNumber" class="btn btn-outline-success">Rent</a></td>
                                <td><a href="/book/@book.InventoryNumber" class="btn btn-outline-info">View</a></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    private List<Book> _books;
    private string _searchedTitle { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _books = await BookService.GetAllBooksAsync();
    }

    private async Task SearchBook()
    {
        if (!string.IsNullOrWhiteSpace(_searchedTitle))
        {
            _books = await BookService.GetSearchedBooksAsync(_searchedTitle);
        }
        else
        {
           _books = await BookService.GetAllBooksAsync();
        }

        StateHasChanged();
    }
}
